# ДЗ - 6. Определить Flash

# Идет игра в семи-карточный техасский покер. на столе лежат пять карт и в руке две карты. 
# Необходимо определить есть ли комбинация, называемая (Flush)
# Комбинация флеш определяется наличием пяти карт одной масти (среди всех карт: и тех что лежат на столе и тех что в руке)

# В вашем файле для решения есть две переменные: table_cards и hand_cards.
# В обе переменные записаны списки карт. в первой - пять карт на столе, во второй - две карты в руке.
# Вот примеры списков, которые будут записаны в эти переменные для проверки вашего решения.
# ["A_S", "J_H", "7_D", "8_D", "10_D"] , ["J_D", "3_D"]

# как мы видим каждая карта записывается в опред.формате.
# Первым символом обозначается "номинал" карты
# Возможные значения: 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A.
# Второй символ всегда подчеркивание
# Третий символ - масть. Возможные значения: S-пики, H-черви, D-буби, C-трефы(крести).
# Если присутствует комбинация флеш - вывести на консоль "Flush!", а в противном случае вывести "No Flush!"


# Решение 1:

table_cards = ["A_S", "J_H", "7_D", "8_D", "10_D"]
hand_cards = ["J_D", "3_D"]

# Нас не интересуют номиналы карт (Валет, Дама, 10, 3) нас интересуют масти карт (Крести, Буби, Пики, Черви)
# следовательно из списков нужно выдрать сами "масти"

table_suites = [i[-1] for i in table_cards]     # масти карт на столе и они указаны как последний символ в элементе списка
hand_suites = [i[-1] for i in hand_cards]       # масти карт на столе и они указаны как последний символ в элементе списка

suites_in_game = table_suites + hand_suites     # и т.к. оператор сложения перегружен, то можно склеить два списка

# и так мы получили список мастей всех карт на столе и на руке
# запустим цикл for по мастям

# всего будет 4 итерации по 4 мастям
# и на каждой итерации нам нужно будет проверить встречается ли эта масть в списке "suites_in_game" - ПЯТЬ раз, если встречается то - Flash.

flush = False
for suit in 'CHSD':                             # вводим переменную suit прямо в цикле
    if suites_in_game.count(suit) >=5:          # count подсчитывает количество вхождений некоего значения в списке
                                                # и на каждой итерации нам нужно будет проверить встречается ли эта масть в списке "suites_in_game" больше 4х раз (>=5)
        flush = True

if flush:
    print('Flush!')
else:
    print('No Flush!')

# Решение 2: через list comprehension:

table_cards = ["A_S", "J_H", "7_D", "8_D", "10_D"]
hand_cards = ["J_D", "3_D"]

table_suites = [i[-1] for i in table_cards]     
hand_suites = [i[-1] for i in hand_cards]  

suites_in_game = table_suites + hand_suites    

flush = any([suites_in_game.count(suit) >= 5 for suit in 'CHSD' ])

if flush:
    print('Flush!')
else:
    print('No Flush!')

# Решение 3: через list comprehension:

table_cards = ["A_S", "J_H", "7_D", "8_D", "10_D"]
hand_cards = ["J_D", "3_D"]

flush = any([sum([card [-1] == suit for card in table_suites + hand_suites ]) >=5 for suit in 'CHSD'])

if flush:
    print('Flush!')
else:
    print('No Flush!')





