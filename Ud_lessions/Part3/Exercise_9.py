# ДЗ - 9. "Камень-ножницы-бумага"
# Написать игру в "камень-ножницы-бумага" против компьютера.

# Запустить игру в бесконечном цикле. 
# Запросить ввод от пользователя (R - камень, S - ножницы, P - бумага). 
# Сгенерировать случайный выбор компьютера. 
# Вывести выбор компьютера. 
# Определить победителя, выведя соответствующую информацию. 
# Спросить пользователя - хочет ли он повторить игру. 
# Если хочет - повторить, не хочет - выйти из цикла.

import random

should_continue = True                                          # маркер обозначающий нужно ли продолжать игру
while should_continue:                                          # Пока он True игра продолжается
                                                                # проведем запрос от пользователя что он хочет выбрать (R - камень, S - ножницы, P - бумага).
    player_choice = input('Сделайте свой выбор: [R/S/P] ').lower()    # и не важно как он ввсел приведем к нижнему регистру при помощи ".lower"

    if player_choice not in ['r', 's', 'p']:                    # проверка корректности ввода. если он не равен ни одному из значений
        print('Не правильный ввод. Попробуйте сначала.')
        continue                                                # то запустить цикл / ввод снова

    # если пользователь ввел [R/S/P], то нам нужно сгенерировать случайный ответ компьютера / сгенерировать число от 1 до 3х и этим числам сопоставить R, S, или P.
    gen = {1: 'r', 2: 's', 3: 'p'}                              # заведем словарь, где 1 будет соответствовать 'r' и т.д. и из них будет выбирать компьютер

    comp_choice = gen [random.randint(1, 3)]                    # забираем по ключу (число по которому мы генерируем)

    # comp_choice = random.choice(['r', 's', 'p']) - или так

    print(f'Выбор компьютера = {comp_choice}')                                  # показать пользователю что компьютер выбрал

        # нужно завести выигрышные комбинации / список tuple (не изменяемые)

    winning_combinations = [('p', 'r'), ('r', 's'), ('s', 'p')]                 # каждый tuple будет содердать 2 элемента, где 1 элемент побеждает 2ой.
      
    if player_choice == comp_choice:                                            # проверка условия
        print('Ничья!')                                                         # Ничья!

    elif (player_choice, comp_choice) in winning_combinations:                  # проверка не попадает ли player_choice и comp_choice в выигрышниые комбинации
        print ('Вы победили!')
    else:
        print ('Победил компьютер!')

    should_continue = input('Хотите начать с начала? [y/n] ').lower() == 'y'    # Запуск цикла по новой если 'y'. / Не хотите продолжить? 
                                                                                # игра прекращается когда мы вводим не 'y'







    
